# This is a basic workflow to help you get started with Actions

name: Update-Pipeline

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
#   pull_request:
#     branches: [ main ]
  schedule:
    - cron: '0 12 * * 1'

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
         activate-environment: maps
         
      - uses: s-weigand/setup-conda@v1
      - run: conda install pandas
      - run: conda install geopandas
#       - run: conda install tqdm
      - run: conda install urllib3
      - run: pip install sodapy
      - run: pip install math
      - run: pip install python-decouple
#       - run: pip install python-dotenv
      - name: Conda info
        shell: bash -l {0}  # activate the conda environment
        run: |
          conda info
          conda list
        # Runs a single command using the runners shell
      - name: Set value
        run: |
           echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
#       - name: Check
#         run: |
#           echo ${{ secrets.API_KEY }} # check that it is not none
#           echo ${{ secrets.API_KEY }} | sed 's/./& /g'
      - name: Run model script
        run: |
          python data_clean.py # code-NB-3-ka.ipynb
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-R@v1
        with:
          r-version: ${{ matrix.r-version }}

      - name: Setting up pandoc for Rmd docs
        uses: r-lib/actions/setup-pandoc@v1
        
      - name: Cache R packages
        id: cache
        uses: actions/cache@v2

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          install.packages(c("dplyr", "leaflet", "DT",
          "crosstalk", "sf", "rmarkdown"))
        shell: Rscript {0}
        
      - name: Knit html
        run: |
          Rscript -e 'rmarkdown::render("index.Rmd")'
          
      - name: Commit results
        run: |
          git commit index.html -m 'Re-build index.html' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

